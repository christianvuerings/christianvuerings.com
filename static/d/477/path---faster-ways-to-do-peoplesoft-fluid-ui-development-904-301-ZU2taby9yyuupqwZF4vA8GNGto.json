{"data":{"site":{"siteMetadata":{"title":"Christian Vuerings","author":"Christian Vuerings"}},"markdownRemark":{"id":"0221d0bc-6ded-5d2c-9a00-0492f1f802e4","excerpt":"PeopleSoft Fluid UI Development Developing pages in  PeopleSoft Fluid UI  can be pretty time consuming and cumbersome. In this post we’ll explain 2 ways to make…","html":"<h3>PeopleSoft Fluid UI Development</h3>\n<p>Developing pages in <a href=\"http://docs.oracle.com/cd/E55243_01/pt854pbr0/eng/pt/tgst/concept_PeopleSoftFluidUserInterface.html#topofpage\">PeopleSoft Fluid UI</a> can be pretty time consuming and cumbersome.</p>\n<p>In this post we’ll explain 2 ways to make your workflow better &#x26; faster:</p>\n<ol>\n<li><strong>Tampermonkey</strong>: loading local CSS &#x26; JavaScript on your Fluid UI page.</li>\n<li><strong>SIS Custom</strong>: framework to concatenate, minify, autoprefix and precompile your assets.</li>\n</ol>\n<h3>1. <a href=\"http://tampermonkey.net/\">Tampermonkey</a></h3>\n<p>Most of the times you probably prefer to not use PeopleSoft App Designer when modifying files. This will allow you to use your favorite editor and have a faster save-reload cycle.</p>\n<p>The main plug-in we’ll be using is called <a href=\"http://tampermonkey.net/\">Tampermonkey</a> (Google Chrome) which allows you to load <em>custom CSS &#x26; JavaScript</em> on any page. If you’re using FireFox, check out <a href=\"https://addons.mozilla.org/en-Us/firefox/addon/greasemonkey/\">Greasemonkey</a>.</p>\n<h4>Installation</h4>\n<ol>\n<li><a href=\"https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=en\">Install Tampermonkey</a></li>\n<li><a href=\"http://cl.ly/aXZc\">Allow for local files</a> on the <code class=\"language-text\">chrome://extensions</code> page.</li>\n</ol>\n<h4>Create Script</h4>\n<ol>\n<li>Click on the Tampermonkey icon and select <a href=\"http://cl.ly/aXt2\">Add a new script</a></li>\n<li>Add the following code:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ==UserScript==</span>\n<span class=\"token comment\">// @name         Fluid UI Custom</span>\n<span class=\"token comment\">// @namespace    christianvuerings</span>\n<span class=\"token comment\">// @version      0.1</span>\n<span class=\"token comment\">// @description  Load local JavaScript and CSS</span>\n<span class=\"token comment\">// @author       Christian Vuerings</span>\n<span class=\"token comment\">// @match        *://*/*</span>\n<span class=\"token comment\">// @require      file:///Users/christian/Projects/sis-custom/dist/sis_cs.js</span>\n<span class=\"token comment\">// @resource     sis_cs file:///Users/christian/Projects/sis-custom/dist/sis_cs.css</span>\n<span class=\"token comment\">// @grant        GM_addStyle</span>\n<span class=\"token comment\">// @grant        GM_getResourceText</span>\n<span class=\"token comment\">// ==/UserScript==</span>\n\n<span class=\"token keyword\">var</span> sis_cs <span class=\"token operator\">=</span> <span class=\"token function\">GM_getResourceText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sis_cs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">GM_addStyle</span><span class=\"token punctuation\">(</span>sis_cs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You’ll need to update the location of your local JavaScript and CSS scripts in the <code class=\"language-text\">@resource</code> and <code class=\"language-text\">@require</code> attributes. You can also update the <code class=\"language-text\">@match</code> attribute if you want to only load these files on certain pages, have a look at the <a href=\"https://developer.chrome.com/extensions/match_patterns\">@match patterns</a> site if you do.</p>\n<h4>Add CSS / JavaScript to PeopleSoft</h4>\n<p>As soon as you’re finished with your local custom CSS &#x26; JS, you should move it to the actual PeopleSoft code. Feel free to check out <a href=\"https://github.com/ucberkeley/sis-custom/blob/master/docs/update_sis.md\">some recommended steps</a>.</p>\n<h3>2. <a href=\"https://github.com/ucberkeley/sis-custom\">SIS Custom</a></h3>\n<p>Loading custom JS &#x26; CSS locally is just the first step in improving your workflow. Usually you’ll also want to make sure you don’t have to save code in 1 file and you’ll want some other optimization steps like:</p>\n<ul>\n<li>Concatenation</li>\n<li>Minification</li>\n<li>Autoprefixing (Browser prefixes)</li>\n<li>Precompilation (SASS)</li>\n<li>Opimization (Images)</li>\n</ul>\n<p>Have a look at the <a href=\"https://github.com/ucberkeley/sis-custom/blob/master/docs/installation.md\">installation instructions</a> and <a href=\"https://github.com/ucberkeley/sis-custom/blob/master/README.md\">our other docs</a>.</p>\n<h4><a href=\"https://github.com/ucberkeley/sis-custom-build\">SIS Custom Build</a></h4>\n<p><a href=\"/2015-04-06-sis-custom-infographic-9e84bab1eec776c8afcf8a396266d78c.svg\"><img src=\"/2015-04-06-sis-custom-infographic-9e84bab1eec776c8afcf8a396266d78c.svg\" alt=\"SIS Custom Workflow\"></a></p>\n<p>In order to make the lifes easier for non front-end devs, we also developed a <a href=\"https://www.heroku.com/\">heroku</a> app called <a href=\"https://github.com/ucberkeley/sis-custom-build\">SIS Custom Build</a>.</p>\n<p>This tool will automatically run the <a href=\"https://github.com/ucberkeley/sis-custom\">SIS Custom</a> build as soon as we push our changes to GitHub. We’re using <a href=\"https://help.github.com/articles/about-webhooks/\">GitHub Webhooks</a> which will trigger the build.</p>\n<p>When the build is complete it makes all the assets available in the following format:</p>\n<ul>\n<li><a href=\"https://sis-custom-build.herokuapp.com/dist\">List of files</a></li>\n<li><a href=\"https://sis-custom-build.herokuapp.com/dist/files_latest.zip\">Zip file</a></li>\n</ul>\n<p>That way to other devs can easily see &#x26; download the latest version of the files.</p>\n<h3>Next steps</h3>\n<p>These are a couple of things we’re currently dreaming of:</p>\n<ol>\n<li>Find a way to use <a href=\"http://livereload.com/\">LiveReload</a> or <a href=\"http://www.browsersync.io/\">BrowserSync</a> with <a href=\"http://tampermonkey.net/\">Tampermonkey</a>. That way we wouldn’t have to manually reload the browser every time.</li>\n<li>Automatically add the CSS / JavaScript and images to PeopleSoft when pushing to GitHub.</li>\n</ol>\n<h3>Conclusion</h3>\n<p>We should always use the best tool for the job and being productive as a developer should be an important focus.</p>\n<p>I hope you’ll be able to use this in your daily development workflow and if you have any remarks / comments, feel free to <a href=\"https://twitter.com/christianvuer\">contact me on twitter</a>.</p>","frontmatter":{"title":"Faster Ways To Do PeopleSoft Fluid UI Development","date":"April 06, 2015"}}},"pageContext":{"slug":"/faster-ways-to-do-peoplesoft-fluid-ui-development/","previous":{"fields":{"slug":"/goals-interests-for-2015/"},"frontmatter":{"title":"Goals & Interests for 2015"}},"next":{"fields":{"slug":"/things-i-like-to-do-in-sf/"},"frontmatter":{"title":"Things I like doing in SF"}}}}