{"data":{"site":{"siteMetadata":{"title":"Christian Vuerings","author":"Christian Vuerings"}},"markdownRemark":{"id":"0d60dc59-df7e-55ce-9c68-5e28cea6065b","excerpt":"Setting up your dev environment on a new laptop or desktop is a tedious and time consuming task. Wouldn’t it be wonderful if we could do a complete setup with…","html":"<p>Setting up your dev environment on a new laptop or desktop is a tedious and time consuming task. Wouldn’t it be wonderful if we could do a complete setup with only 1 command?</p>\n<h3>What are dotfiles?</h3>\n<p>The name dotfiles originates from files which start with a dot. Usually these contain settings or user preferences. Examples are</p>\n<ul>\n<li><code class=\"language-text\">.bash_prompt</code>: create a custom theme for your terminal / shell</li>\n<li><code class=\"language-text\">.editorconfig</code>: useful coding style defaults per language</li>\n<li><code class=\"language-text\">.gitignore</code>: ignore certain files when executing <code class=\"language-text\">git</code> commands</li>\n</ul>\n<p>When developers mention <code class=\"language-text\">dotfiles</code> in conversations, they usually refer to a Git repository which contains a list of these files. Lately these repositories also started to include ways to install software.</p>\n<h3>How to get started</h3>\n<p>Instead of starting from scratch, I recommend starting out with a good base from Mathias Bynens:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/mathiasbynens/dotfiles.git <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cd</span> dotfiles <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">source</span> bootstrap.sh</code></pre></div>\n<p>That command will clone his reprository with dotfiles and execute the <code class=\"language-text\">bootstrap.sh</code> script which will install all of these into your own home directory.</p>\n<h3>Adding your own preferences</h3>\n<p>One of the nice things you can do with matthias repository is to add your own configuration in a <code class=\"language-text\">.extra</code> which will be sourced along other files.</p>\n<h4>Git credentials</h4>\n<p>It is a good idea to set the author’s name and email globally so they’re attached to any new commits:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">GIT_AUTHOR_NAME<span class=\"token operator\">=</span><span class=\"token string\">\"Christian Vuerings\"</span>\nGIT_COMMITTER_NAME<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$GIT_AUTHOR_NAME</span>\"</span>\n<span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"<span class=\"token variable\">$GIT_AUTHOR_NAME</span>\"</span>\nGIT_AUTHOR_EMAIL<span class=\"token operator\">=</span><span class=\"token string\">\"christian+no-spam@gmail.com\"</span>\nGIT_COMMITTER_EMAIL<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$GIT_AUTHOR_EMAIL</span>\"</span>\n<span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"<span class=\"token variable\">$GIT_AUTHOR_EMAIL</span>\"</span></code></pre></div>\n<p>If you’ve ever noticed commits without an author which might result in seeing <code class=\"language-text\">showing unrecognized author</code> in GitHub</p>\n<p><img src=\"./github-unrecognized-author.png\" alt=\"GitHub - showing unrecognized author\"></p>\n<p><a href=\"https://git-scm.com/book/en/v2/Git-Internals-Environment-Variables\">https://git-scm.com/book/en/v2/Git-Internals-Environment-Variables</a></p>\n<h3>Installing your own software</h3>\n<h3>Include</h3>\n<p>./bootstrap.sh\naliases / functions\ninstalling software</p>\n<h3>Learn from the people that went before you</h3>\n<p>Feel free to take a peek at other developers’s dotfiles and learn how they aproached creating their own dotfiles:</p>\n<ul>\n<li><a href=\"https://dotfiles.github.io/\">GitHub does dotfiles</a>: An unofficial guide to dotfiles on GitHub organized by bootstraps / framework and <code class=\"language-text\">.gitignore</code> files.</li>\n<li><a href=\"https://github.com/webpro/awesome-dotfiles\">awesome-dotfiles</a>: A curated list of dotfiles resources organized by shell type &#x26; provides tools to make your dotfiles easier to maintain and more secure way.</li>\n<li><a href=\"https://github.com/mathiasbynens/dotfiles\">Mathias Bynens - dotfiles</a>: Dotfiles from <a href=\"https://twitter.com/mathias\">@mathias</a>, my personal favorite repo which I based <a href=\"https://github.com/christianvuerings/dotfiles\">my own dotfiles</a> on.</li>\n</ul>\n<p>For any feedback / questions - <a href=\"https://twitter.com/christianvuer\">please reach out to me on twitter</a>.</p>","frontmatter":{"title":"5 Useful Dev Commands","date":"January 21, 2019"}}},"pageContext":{"slug":"/5-useful-dev-commands/","previous":{"fields":{"slug":"/things-i-like-to-do-in-sf/"},"frontmatter":{"title":"Things I like doing in SF"}},"next":null}}